diff --git a/evince_synctex.py b/evince_synctex.py
index 084c334..a9ec49b 100755
--- a/evince_synctex.py
+++ b/evince_synctex.py
@@ -32,7 +32,8 @@ import logging
 import argparse
 import subprocess
 import urllib.parse
-
+import dbus.mainloop.glib
+from gi.repository import GLib
 
 RUNNING, CLOSED = range(2)
 
@@ -59,10 +60,11 @@ class EvinceWindowProxy:
     daemon = None
     bus = None
 
-    def __init__(self, uri, editor, logger):
+    def __init__(self, uri, editor, logger, loop):
         assert uri is not None
         assert editor is not None
         assert logger is not None
+        self.loop = loop
         self.logger = logger
         self.uri = uri
         self.editor = editor
@@ -124,9 +126,13 @@ class EvinceWindowProxy:
                 self.dbus_name, window_list[0])
             self.window = dbus.Interface(window_obj, EV_WINDOW_IFACE)
             self.window.connect_to_signal("SyncSource", self.on_sync_source)
+            self.window.connect_to_signal("Closed", self.on_closed)
         else:
             self.logger.debug("GetWindowList returned empty list")
 
+    def on_closed(self):
+        self.loop.quit()
+
     def on_sync_source(self, input_file, source_link, timestamp):
         path = urllib.parse.unquote(input_file.split("file://")[1])
         line = source_link[0]
@@ -146,8 +152,6 @@ def startEvince(line, pdf_file, editor_command):
     logger.setLevel(logging.DEBUG)
     logger.addHandler(logging.StreamHandler())
 
-    import dbus.mainloop.glib
-    from gi.repository import GLib
     dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)
 
     pdf_uri = get_uri(pdf_file)
@@ -168,17 +172,11 @@ def startEvince(line, pdf_file, editor_command):
 
     process = subprocess.Popen(('evince', pdf_uri))
 
-    def poll_viewer_process():
-        process.poll()
-        if (process.returncode is not None):
-            exit(0)
-        return True
-
     try:
+        loop = GLib.MainLoop()
         EvinceWindowProxy.instance = EvinceWindowProxy(
-            pdf_uri, editor_command, logger)
-        GLib.idle_add(poll_viewer_process)
-        GLib.MainLoop().run()
+            pdf_uri, editor_command, logger, loop)
+        loop.run()
     except KeyboardInterrupt:
         pass
     finally:
