[1mdiff --git a/flake.nix b/flake.nix[m
[1mindex 6c26953..be5942f 100644[m
[1m--- a/flake.nix[m
[1m+++ b/flake.nix[m
[36m@@ -4,6 +4,10 @@[m
     nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable-small";[m
     flake-utils.url = "github:numtide/flake-utils";[m
     impermanence.url = "github:nix-community/impermanence";[m
[32m+[m[32m    fenix = {[m
[32m+[m[32m      url = "github:nix-community/fenix";[m
[32m+[m[32m      inputs.nixpkgs.follows = "nixpkgs";[m
[32m+[m[32m    };[m
     neovim = {[m
       url = "github:nix-community/neovim-nightly-overlay";[m
       inputs.nixpkgs.follows = "nixpkgs";[m
[36m@@ -17,7 +21,7 @@[m
       inputs.nixpkgs.follows = "nixpkgs";[m
     };[m
   };[m
[31m-  outputs = { self, nixpkgs, flake-utils, impermanence, neovim, home-manager, sops-nix }:[m
[32m+[m[32m  outputs = { self, nixpkgs, flake-utils, impermanence, fenix, neovim, home-manager, sops-nix }:[m
     let this = import ./pkgs; in[m
     nixpkgs.lib.recursiveUpdate[m
       (flake-utils.lib.eachSystem [ "aarch64-linux" "x86_64-linux" ] (system:[m
[36m@@ -25,7 +29,7 @@[m
           pkgs = import nixpkgs {[m
             inherit system;[m
             config.allowUnfree = true;[m
[31m-            overlays = [ self.overlay neovim.overlay ];[m
[32m+[m[32m            overlays = [ self.overlay ];[m
           };[m
         in[m
         rec {[m
[36m@@ -37,7 +41,7 @@[m
         overlay = this.overlay;[m
         nixosConfigurations.local = import ./nixos {[m
           system = "x86_64-linux";[m
[31m-          inherit self nixpkgs impermanence neovim home-manager sops-nix;[m
[32m+[m[32m          inherit self nixpkgs impermanence fenix neovim home-manager sops-nix;[m
         };[m
         pkgs = nixosConfigurations.local.pkgs;[m
       });[m
[1mdiff --git a/nixos/default.nix b/nixos/default.nix[m
[1mindex c927b7b..c781f83 100644[m
[1m--- a/nixos/default.nix[m
[1m+++ b/nixos/default.nix[m
[36m@@ -8,7 +8,7 @@[m [mnixpkgs.lib.nixosSystem {[m
     home-manager.nixosModules.home-manager[m
     sops-nix.nixosModules.sops[m
     {[m
[31m-      nixpkgs.overlays = [ self.overlay neovim.overlay ];[m
[32m+[m[32m      nixpkgs.overlays = [ self.overlay neovim.overlay fenix.overlay ];[m
       nix.registry.p.flake = nixpkgs;[m
       home-manager.users.nickcao.imports = [ "${impermanence}/home-manager.nix" ];[m
     }[m
[1mdiff --git a/nixos/home.nix b/nixos/home.nix[m
[1mindex cb05f58..20bcdad 100644[m
[1m--- a/nixos/home.nix[m
[1m+++ b/nixos/home.nix[m
[36m@@ -5,6 +5,7 @@[m [mlet[m
 in[m
 {[m
   home.packages = with pkgs; [[m
[32m+[m[32m    rust-nightly.default.toolchain[m
     age[m
     pandoc[m
     prime-run[m
